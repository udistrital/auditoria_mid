{
    "swagger": "2.0",
    "basePath": "/v1",
    "paths": {
        "/auditoria/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "206": {
                        "description": "Partial Content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "summary": "Consulta eventos de logs en AWS CloudWatch",
                "description": "Parameters\n----------\nNinguno\n\nReturns\n-------\nResponse\n    Respuesta con los logs consultados o error.",
                "operationId": "get_document_get_all",
                "tags": [
                    "auditoria"
                ]
            }
        },
        "/auditoria/buscarLog": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "206": {
                        "description": "Partial Content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "summary": "Filtra los logs de AWS con base en par\u00e1metros espec\u00edficos",
                "description": "Parameters\n----------\nrequest : json\n    Un JSON que contiene:\n    - fechaInicio (str): Fecha de inicio en formato aaaa-mm-dd\n    - horaInicio (str): Hora de inicio en formato hh:mm\n    - fechaFin (str): Fecha de fin en formato aaaa-mm-dd\n    - horaFin (str): Hora de fin en formato hh:mm\n    - tipo_log (str): Tipo de log (GET, POST, PUT, etc.)\n    - codigoResponsable (int): C\u00f3digo del responsable\n    - rolResponsable (str): Rol del responsable\n\nReturns\n-------\nResponse\n    Respuesta con los logs filtrados en formato JSON.",
                "operationId": "post_filter_logs",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/filtro_log_request"
                        }
                    }
                ],
                "tags": [
                    "auditoria"
                ]
            }
        },
        "/auditoria/buscarLogsFiltrados": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "summary": "Filtra y pagina logs de AWS con base en par\u00e1metros espec\u00edficos",
                "description": "Permite b\u00fasqueda avanzada con m\u00faltiples filtros y paginaci\u00f3n para mejor performance.\nLos logs pueden ser procesados completamente (standard) o m\u00ednimamente (flexible) seg\u00fan el typeSearch.\n\nEjemplo de par\u00e1metros requeridos:\n```json\n{\n    \"fechaInicio\":1751371200,\n    \"horaInicio\":\"07:00\",\n    \"fechaFin\":1751461200,\n    \"horaFin\":\"08:00\",\n    \"tipo_log\":\"GET\",\n    \"codigoResponsable\":\"\",\n    \"palabraClave\":\"\",\n    \"nombreApi\":\"polux_crud\",\n    \"entornoApi\":\"SANDBOX\",\n    \"typeSearch\":\"flexible\",\n    \"pagina\":1,\n    \"limite\":5000\n}\n```\nLa respuesta para tipo de b\u00fasqueda 'Estandar' incluye metadatos de paginaci\u00f3n y los logs encontrados.\nCada log contiene:\n- Tipo de log\n- Fecha y hora\n- Usuario responsable\n- Nombre del responsable\n- Documento del responsable\n- Rol del responsable\n- Direcci\u00f3n IP\n- API consumida\n- Petici\u00f3n realizada (endpoint, m\u00e9todo, datos)\n- Evento en base de datos (si aplica)\n- Tipo de error (si aplica)\n- Mensaje de error (si aplica)\n\nLa respuesta para  tipo de b\u00fasqueda 'Flexible' incluye p\u00e1ginaci\u00f3n, pero los datos en crudo,es decir el mensaje de error sin procesar\nya que el procesamiento de la informaci\u00f3n se hace directamente desde el front.\n\n```json\n{\n    \"Status\": \"Successful request\",\n    \"Code\": \"200\",\n    \"Data\": [\n        \"2025/07/01 12:00:21.715 [I] [middleware.go:163] {\"\n        \"    app_name: polux_crud,\"\n        \"    host: xxx.xx.x.xxx:xxxxx,\"\n        \"    end_point: /,\"\n        \"    method: GET,\"\n        \"    date: 2025-07-01T12:00:21Z,\"\n        \"    sql_orm: {...},\"\n        \"    ip_user: xxx.xx.x.xxx,\"\n        \"    user_agent: ELB-HealthChecker/2.0,\"\n        \"    user: Error WSO2,\"\n        \"    data: {\"RouterPattern\":\"/\"}\"\n        \"}\"\n        ...\n    ],\n    \"Pagination\": {\n        \"pagina\": 1,\n        \"limite\": 20,\n        \"total registros\": 20,\n        \"paginas\": 1\n    }\n}",
                "operationId": "post_filter_logs_paginated",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/filtro_log_request"
                        }
                    }
                ],
                "tags": [
                    "auditoria"
                ]
            }
        }
    },
    "info": {
        "title": "auditoria_mid",
        "version": "1.0",
        "description": "Api mid para la obtenci\u00f3n de logs de AWS"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [
        {
            "name": "auditoria",
            "description": "Consulta logs de AWS"
        }
    ],
    "definitions": {
        "filtro_log_request": {
            "required": [
                "codigoResponsable",
                "entornoApi",
                "fechaFin",
                "fechaInicio",
                "horaFin",
                "horaInicio",
                "nombreApi",
                "tipo_log"
            ],
            "properties": {
                "fechaInicio": {
                    "type": "string"
                },
                "horaInicio": {
                    "type": "string"
                },
                "fechaFin": {
                    "type": "string"
                },
                "horaFin": {
                    "type": "string"
                },
                "tipo_log": {
                    "type": "string"
                },
                "codigoResponsable": {
                    "type": "integer"
                },
                "nombreApi": {
                    "type": "string"
                },
                "entornoApi": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}