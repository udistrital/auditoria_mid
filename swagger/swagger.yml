basePath: /v1
consumes:
- application/json
definitions:
  filtro_log_request:
    properties:
      codigoResponsable:
        type: integer
      entornoApi:
        type: string
      fechaFin:
        type: string
      fechaInicio:
        type: string
      horaFin:
        type: string
      horaInicio:
        type: string
      nombreApi:
        type: string
      tipo_log:
        type: string
    required:
    - codigoResponsable
    - entornoApi
    - fechaFin
    - fechaInicio
    - horaFin
    - horaInicio
    - nombreApi
    - tipo_log
    type: object
info:
  description: Api mid para la obtención de logs de AWS
  title: auditoria_mid
  version: '1.0'
paths:
  /auditoria/:
    get:
      description: "Parameters\n----------\nNinguno\n\nReturns\n-------\nResponse\n\
        \    Respuesta con los logs consultados o error."
      operationId: get_document_get_all
      responses:
        '200':
          description: Success
        '206':
          description: Partial Content
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error
      summary: Consulta eventos de logs en AWS CloudWatch
      tags:
      - auditoria
  /auditoria/buscarLog:
    post:
      description: "Parameters\n----------\nrequest : json\n    Un JSON que contiene:\n\
        \    - fechaInicio (str): Fecha de inicio en formato aaaa-mm-dd\n    - horaInicio\
        \ (str): Hora de inicio en formato hh:mm\n    - fechaFin (str): Fecha de fin\
        \ en formato aaaa-mm-dd\n    - horaFin (str): Hora de fin en formato hh:mm\n\
        \    - tipo_log (str): Tipo de log (GET, POST, PUT, etc.)\n    - codigoResponsable\
        \ (int): Código del responsable\n    - rolResponsable (str): Rol del responsable\n\
        \nReturns\n-------\nResponse\n    Respuesta con los logs filtrados en formato\
        \ JSON."
      operationId: post_filter_logs
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/filtro_log_request'
      responses:
        '200':
          description: Success
        '206':
          description: Partial Content
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error
      summary: Filtra los logs de AWS con base en parámetros específicos
      tags:
      - auditoria
  /auditoria/buscarLogsFiltrados:
    post:
      description: "Permite búsqueda avanzada con múltiples filtros y paginación para\
        \ mejor performance.\nLos logs pueden ser procesados completamente (standard)\
        \ o mínimamente (flexible) según el typeSearch.\n\nEjemplo de parámetros requeridos:\n\
        ```json\n{\n    \"fechaInicio\":1751371200,\n    \"horaInicio\":\"07:00\"\
        ,\n    \"fechaFin\":1751461200,\n    \"horaFin\":\"08:00\",\n    \"tipo_log\"\
        :\"GET\",\n    \"codigoResponsable\":\"\",\n    \"palabraClave\":\"\",\n \
        \   \"nombreApi\":\"polux_crud\",\n    \"entornoApi\":\"SANDBOX\",\n    \"\
        typeSearch\":\"flexible\",\n    \"pagina\":1,\n    \"limite\":5000\n}\n```\n\
        La respuesta para tipo de búsqueda 'Estandar' incluye metadatos de paginación\
        \ y los logs encontrados.\nCada log contiene:\n- Tipo de log\n- Fecha y hora\n\
        - Usuario responsable\n- Nombre del responsable\n- Documento del responsable\n\
        - Rol del responsable\n- Dirección IP\n- API consumida\n- Petición realizada\
        \ (endpoint, método, datos)\n- Evento en base de datos (si aplica)\n- Tipo\
        \ de error (si aplica)\n- Mensaje de error (si aplica)\n\nLa respuesta para\
        \  tipo de búsqueda 'Flexible' incluye páginación, pero los datos en crudo,es\
        \ decir el mensaje de error sin procesar\nya que el procesamiento de la información\
        \ se hace directamente desde el front.\n\n```json\n{\n    \"Status\": \"Successful\
        \ request\",\n    \"Code\": \"200\",\n    \"Data\": [\n        \"2025/07/01\
        \ 12:00:21.715 [I] [middleware.go:163] {\"\n        \"    app_name: polux_crud,\"\
        \n        \"    host: xxx.xx.x.xxx:xxxxx,\"\n        \"    end_point: /,\"\
        \n        \"    method: GET,\"\n        \"    date: 2025-07-01T12:00:21Z,\"\
        \n        \"    sql_orm: {...},\"\n        \"    ip_user: xxx.xx.x.xxx,\"\n\
        \        \"    user_agent: ELB-HealthChecker/2.0,\"\n        \"    user: Error\
        \ WSO2,\"\n        \"    data: {\"RouterPattern\":\"/\"}\"\n        \"}\"\n\
        \        ...\n    ],\n    \"Pagination\": {\n        \"pagina\": 1,\n    \
        \    \"limite\": 20,\n        \"total registros\": 20,\n        \"paginas\"\
        : 1\n    }\n}"
      operationId: post_filter_logs_paginated
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/filtro_log_request'
      responses:
        '200':
          description: Success
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Server error
      summary: Filtra y pagina logs de AWS con base en parámetros específicos
      tags:
      - auditoria
produces:
- application/json
responses:
  MaskError:
    description: When any error occurs on mask
  ParseError:
    description: When a mask can't be parsed
swagger: '2.0'
tags:
- description: Consulta logs de AWS
  name: auditoria
